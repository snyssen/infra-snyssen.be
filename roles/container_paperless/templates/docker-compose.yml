version: "2"
services:
  paperless_redis:
    image: redis:7
    container_name: paperless_redis
    networks:
      - internal
    restart: unless-stopped
    volumes:
      - "{{ docker_mounts_directory }}/paperless/redis:/data"
    mem_limit: 12m

  paperless:
    image: ghcr.io/paperless-ngx/paperless-ngx:2.6.2
    container_name: paperless
    restart: unless-stopped
    networks:
      - internal
      - web
      - db
    depends_on:
      - paperless_redis
      - paperless_gotenberg
      - paperless_tika
    healthcheck:
      test:
        ["CMD", "curl", "-fs", "-S", "--max-time", "2", "http://localhost:8000"]
      interval: 30s
      timeout: 10s
      retries: 5
    labels:
      - traefik.enable=true
      - traefik.docker.network=web
      - traefik.http.routers.paperless.entryPoints=websecure
      - traefik.http.routers.paperless.rule=Host(`paperless.{{ ansible_fqdn }}`)
      - traefik.http.routers.paperless.service=paperless
      - traefik.http.services.paperless.loadBalancer.server.port=8000
    volumes:
      - "{{ docker_mounts_directory }}/paperless/data:/usr/src/paperless/data"
      - /mnt/storage/paperless/media:/usr/src/paperless/media
      - /mnt/storage/paperless/export:/usr/src/paperless/export
      - /mnt/storage/paperless/consume:/usr/src/paperless/consume
    environment:
      PAPERLESS_REDIS: redis://paperless_redis:6379
      PAPERLESS_DBHOST: postgres
      PAPERLESS_DBPASS: "{{ paperless__postgres_password }}"
      PAPERLESS_TIKA_ENABLED: 1
      PAPERLESS_TIKA_GOTENBERG_ENDPOINT: http://paperless_gotenberg:3000
      PAPERLESS_TIKA_ENDPOINT: http://paperless_tika:9998
      # Paperless specific
      USERMAP_UID: "33" # 33 is the Nextcloud user id, this will allow us to mount the consume folder into Nextcloud and ingest files from it
      USERMAP_GID: "{{ ansible_user_gid }}"
      PAPERLESS_URL: https://paperless.{{ ansible_fqdn }}
      PAPERLESS_SECRET_KEY: "{{ paperless__secret_key }}"
      PAPERLESS_TIME_ZONE: Europe/Brussels
      PAPERLESS_OCR_LANGUAGE: fra
      PAPERLESS_OCR_USER_ARGS: '{"continue_on_soft_render_error": true, "invalidate_digital_signatures": true}'
    mem_limit: 1g

  paperless_gotenberg:
    image: docker.io/gotenberg/gotenberg:8.2
    container_name: paperless_gotenberg
    restart: unless-stopped
    networks:
      - internal
    # The gotenberg chromium route is used to convert .eml files. We do not
    # want to allow external content like tracking pixels or even javascript.
    command:
      - "gotenberg"
      - "--chromium-disable-javascript=true"
      - "--chromium-allow-list=file:///tmp/.*"
    mem_limit: 8m

  paperless_tika:
    image: ghcr.io/paperless-ngx/tika:2.9.1-full
    container_name: paperless_tika
    restart: unless-stopped
    networks:
      - internal
    mem_limit: 128m

networks:
  web:
    external: true
  db:
    external: true
  internal:

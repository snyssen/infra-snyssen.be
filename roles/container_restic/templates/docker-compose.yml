services:
  restic_local: &restic-config
    image: ghcr.io/snyssen/restic-backup-docker-wol:1.3.2@sha256:956bfbe5e7a4a94dde8963b37730b881333eed18f9adfd277cd470d669cc5883
    restart: unless-stopped
    container_name: restic_local
    hostname: "{{ ansible_fqdn }}"
    network_mode: host
    environment: &restic-env
      RESTIC_REPOSITORY: "{{ backups__local_destination }}"
      RESTIC_PASSWORD: "{{ backups__encryption_key }}"
      RESTIC_PROGRESS_FPS: "1"
      BACKUP_CRON: 0 3 * * *
      # BACKUP_CRON: 0 3 29 2 * # Essentially disable cron
      HEALTHCHECK_ID: "{{ backups__local_healthcheck_id }}"
      RESTIC_FORGET_ARGS: --prune --keep-daily 14 --keep-weekly 4 --keep-monthly 6 --keep-yearly 3
      BACKUP_SERVER_DOMAIN: "{{ backups__local_domain }}"
      BACKUP_SERVER_MAC_ADDRESS: "{{ backup_server_mac_address }}"
    # This is way too much, but I want to make sure backups never fail
    mem_limit: 8g
    volumes: {{ backups__volumes_local | to_yaml }}

  restic_remote:
    <<: *restic-config
    container_name: restic_remote
    hostname: "{{ ansible_fqdn }}"
    environment:
      <<: *restic-env
      RESTIC_REPOSITORY: "{{ backups__remote_destination }}"
      BACKUP_CRON: 0 5 * * *
      B2_ACCOUNT_ID: "{{ backups__access_id_remote }}"
      B2_ACCOUNT_KEY: "{{ backups__access_secret_remote }}"
      HEALTHCHECK_ID: "{{ backups__remote_healthcheck_id }}"
    volumes: {{ backups__volumes_remote | to_yaml }}

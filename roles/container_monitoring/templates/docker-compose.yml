version: "3"

services:
  influxdb:
    image: influxdb:2.7
    container_name: influxdb
    restart: unless-stopped
    networks:
      - monitoring
    volumes:
      - "{{ docker_mounts_directory }}/monitoring/influxdb:/var/lib/influxdb2"
    healthcheck:
      test: [ "CMD", "curl", "-f", "http://localhost:8086/health" ]
      interval: 5s
      timeout: 10s
      retries: 20

  scrutiny-web:
    image: ghcr.io/analogj/scrutiny:v0.5.0-web
    container_name: scrutiny-web
    restart: unless-stopped
    networks:
      - monitoring
      - web
    volumes:
      - /mnt/storage/scrutiny:/opt/scrutiny/config
    environment:
      SCRUTINY_WEB_INFLUXDB_HOST: influxdb
    depends_on:
      influxdb:
        condition: service_healthy
    healthcheck:
      test:
        [
          "CMD",
          "curl",
          "-f",
          "http://localhost:8080/api/health"
        ]
      interval: 5s
      timeout: 10s
      retries: 20
      start_period: 10s
    labels:
      - traefik.enable=true
      - traefik.docker.network=web
      - traefik.http.routers.scrutiny-web.entryPoints=websecure
      - traefik.http.routers.scrutiny-web.rule=Host(`scrutiny.{{ ansible_fqdn }}`)
      - traefik.http.routers.scrutiny-web.middlewares=auth

  prometheus:
    image: quay.io/prometheus/prometheus
    container_name: prometheus
    restart: unless-stopped
    networks:
      - monitoring
      - web
    command: >-
      --config.file=/etc/prometheus/prometheus.yml
      --storage.tsdb.path=/prometheus
      --web.console.libraries=/usr/share/prometheus/console_libraries
      --web.console.templates=/usr/share/prometheus/consoles
      --storage.tsdb.retention.time=1y
    volumes:
      - /mnt/storage/prometheus:/etc/prometheus
      - "{{ docker_mounts_directory }}/monitoring/prometheus:/prometheus"
    labels:
      - traefik.enable=true
      - traefik.docker.network=web
      - traefik.http.routers.prometheus.entryPoints=websecure
      - traefik.http.routers.prometheus.rule=Host(`prometheus.{{ ansible_fqdn }}`)
      - traefik.http.routers.prometheus.middlewares=auth

  grafana:
    image: grafana/grafana-oss:9.3.1
    container_name: grafana
    restart: unless-stopped
    networks:
      - monitoring
      - web
    volumes:
      - "{{ docker_mounts_directory }}/grafana:/var/lib/grafana"
    labels:
      - traefik.enable=true
      - traefik.docker.network=web
      - traefik.http.routers.grafana.entryPoints=websecure
      - traefik.http.routers.grafana.rule=Host(`monitor.{{ ansible_fqdn }}`)
    environment:
      - GF_INSTALL_PLUGINS=grafana-clock-panel,grafana-piechart-panel
      - GF_SERVER_ROOT_URL=https://monitor.{{ ansible_fqdn }}
      - GF_SMTP_ENABLED=true
      - GF_SMTP_HOST={{ smtp__host }}:{{ smtp__port }}
      - GF_SMTP_USER={{ smtp__user }}
      - GF_SMTP_PASSWORD={{ smtp__pass | replace('$', '$$') }}
      - GF_SMTP_FROM_ADDRESS={{ smtp__from }}

  uptime:
    image: louislam/uptime-kuma:1
    container_name: uptime
    restart: unless-stopped
    networks:
      - monitoring
      - web
    volumes:
      - "{{ docker_mounts_directory }}/uptime:/app/data"
    labels:
      - traefik.enable=true
      - traefik.docker.network=web
      - traefik.http.routers.uptime.entryPoints=websecure
      - traefik.http.routers.uptime.rule=Host(`uptime.{{ ansible_fqdn }}`)

  # TODO: Backups of database? I don't feel like it would be a huge loss if this one got reset tho...
  plausible_postgres:
    image: postgres:14-alpine
    container_name: plausible_postgres
    restart: unless-stopped
    networks:
      - internal
    volumes:
      - "{{ docker_mounts_directory }}/plausible/postgres:/var/lib/postgresql/data"
    environment:
      - POSTGRES_DB=plausible
      - POSTGRES_USER=plausible
      - POSTGRES_PASSWORD={{ monitoring__plausible__postgress_pass }}

  plausible_clickhouse:
    image: clickhouse/clickhouse-server:22.12-alpine
    container_name: plausible_clickhouse
    restart: unless-stopped
    networks:
      - internal
    volumes:
      - "{{ docker_mounts_directory }}/plausible/clickhouse/data:/var/lib/clickhouse"
      - "{{ docker_mounts_directory }}/plausible/clickhouse/clickhouse-config.xml:/etc/clickhouse-server/config.d/logging.xml:ro"
      - "{{ docker_mounts_directory }}/plausible/clickhouse/clickhouse-user-config.xml:/etc/clickhouse-server/users.d/logging.xml:ro"
    ulimits:
      nofile:
        soft: 262144
        hard: 262144

  plausible:
    image: plausible/analytics:latest
    container_name: plausible
    restart: unless-stopped
    command: sh -c "sleep 45 && /entrypoint.sh db migrate && /entrypoint.sh run"
    networks:
      - internal
      - web
    depends_on:
      - plausible_postgres
      - plausible_clickhouse
    labels:
      - traefik.enable=true
      - traefik.docker.network=web
      - traefik.http.routers.plausible.entryPoints=websecure
      - traefik.http.routers.plausible.rule=Host(`plausible.{{ ansible_fqdn }}`)
      - traefik.http.routers.plausible.service=plausible
      - traefik.http.services.plausible.loadBalancer.server.port=8000
    environment:
      - DISABLE_REGISTRATION=true
      - SECRET_KEY_BASE={{ monitoring__plausible_secret }}
      - BASE_URL=https://plausible.{{ ansible_fqdn }}
      - DATABASE_URL=postgres://plausible:{{ monitoring__plausible__postgress_pass }}@plausible_postgres:5432/plausible
      - CLICKHOUSE_DATABASE_URL=http://plausible_clickhouse:8123/plausible_clickhouse
      - MAILER_EMAIL={{ smtp__from }}
      - SMTP_HOST_ADDR={{ smtp__host }}
      - SMTP_HOST_PORT={{ smtp__port }}
      - SMTP_USER_NAME={{ smtp__user }}
      - SMTP_USER_PWD={{ smtp__pass|replace('$','$$') }}
      - SMTP_HOST_SSL_ENABLED={{ smtp__tls }}

networks:
  internal:
  monitoring:
    external: true
  web:
    external: true

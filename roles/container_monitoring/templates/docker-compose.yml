version: "3"

services:
  influxdb:
    image: influxdb:2.2
    container_name: influxdb
    networks:
      - internal
    volumes:
      - "{{ docker_mounts_directory }}/monitoring/influxdb:/var/lib/influxdb2"
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8086/health"]
      interval: 5s
      timeout: 10s
      retries: 20


  scrutiny-web:
    image: ghcr.io/analogj/scrutiny:beta-web
    container_name: scrutiny-web
    networks:
      - internal
      - web
    volumes:
      - /mnt/storage/scrutiny:/opt/scrutiny/config
    environment:
      SCRUTINY_WEB_INFLUXDB_HOST: influxdb
    depends_on:
      influxdb:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/api/health"]
      interval: 5s
      timeout: 10s
      retries: 20
      start_period: 10s
    labels:
      - traefik.enable=true
      - traefik.docker.network=web
      - traefik.http.routers.scrutiny-web.entryPoints=websecure
      - traefik.http.routers.scrutiny-web.rule=Host(`scrutiny.{{ ansible_fqdn }}`)

  prometheus:
    image: quay.io/prometheus/prometheus
    container_name: prometheus
    networks:
      - internal
      - web
    volumes:
      - /mnt/storage/prometheus:/etc/prometheus
    labels:
      - traefik.enable=true
      - traefik.docker.network=web
      - traefik.http.routers.prometheus.entryPoints=websecure
      - traefik.http.routers.prometheus.rule=Host(`prometheus.{{ ansible_fqdn }}`)

  grafana:
    image: grafana/grafana-oss:9.2.6
    container_name: grafana
    networks:
      - internal
      - web
    volumes:
      - "{{ docker_mounts_directory }}/grafana:/var/lib/grafana"
    labels:
      - traefik.enable=true
      - traefik.docker.network=web
      - traefik.http.routers.grafana.entryPoints=websecure
      - traefik.http.routers.grafana.rule=Host(`monitor.{{ ansible_fqdn }}`)

networks:
  internal:
  web:
    external: true

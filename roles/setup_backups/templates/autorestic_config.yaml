# {{ ansible_managed }}
version: 2
backends:
  {%- for backend in autorestic__backends +%}
  {{ backend.name }}:
    type: {{ backend.type }}
    path: {{ backend.path }}
    key: {{ backend.key }}
    {%- if backend.env is defined +%}
    env:
      {%- for key, val in backend.env.items() +%}
      {{ key }}: {{ val }}
      {%- endfor +%}
    {%- endif +%}
  {%- endfor +%}

locations:
  {%- for location in autorestic__locations +%}
  {{ location.name }}:
    from:
      {%- for from in location.from +%}
      - {{ from }}
      {%- endfor +%}
    to:
      {%- for to in location.to +%}
      - {{ to }}
      {%- endfor +%}
    forget: prune
    options:
      forget:
        keep-daily: 14
        keep-weekly: 4
        keep-monthly: 6
        keep-yearly: 1
    cron: 30 0 * * *
    hooks:
      before:
        # - curl --retry 3 https://hc-ping.com/{{ location.healthcheck_id }}/start
        - echo "Starting backup"

        {%- if location.hooks is defined and location.hooks.before is defined +%}
        {%- for hook in location.hooks.before +%}
        - {{ hook }}
        {%- endfor +%}
        {%- endif +%}

        {%- for backend in autorestic__backends if backend.name in location.to and backend.hooks is defined +%}
        {%- for hook in backend.hooks.before if backend.hooks.before is defined +%}
        - {{ hook }}
        {%- endfor +%}
        {%- endfor +%}
      success:
        - curl --retry 5 -o /dev/null "https://uptime.{{ ansible_fqdn }}/api/push/{{ autorestic__push_monitors.results | selectattr('item.name', '==', location.name) | map(attribute='monitors') | first | map(attribute='pushToken') | first }}?status=up&msg=OK&ping="
      failure:
        - curl --retry 5 -o /dev/null "https://uptime.{{ ansible_fqdn }}/api/push/{{ autorestic__push_monitors.results | selectattr('item.name', '==', location.name) | map(attribute='monitors') | first | map(attribute='pushToken') | first }}?status=down&msg=OK&ping="
      after:
        {%- for backend in autorestic__backends if backend.name in location.to and backend.hooks is defined +%}
        {%- for hook in backend.hooks.after if backend.hooks.after is defined +%}
        - {{ hook }}
        {%- endfor +%}
        {%- endfor +%}
        - echo "Backup fully done!"
  {%- endfor +%}

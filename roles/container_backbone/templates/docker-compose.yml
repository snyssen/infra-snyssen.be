version: "2"
services:
  traefik:
    image: traefik:banon
    restart: unless-stopped
    container_name: traefik
    networks:
      - web
    command:
      - "--api=true"
      - "--api.dashboard=true"
      - "--accesslog=true"
      - "--metrics.prometheus=true"
      - "--providers.docker=true"
      - "--providers.docker.exposedbydefault=false"

      - "--entryPoints.web.address=:80"
      - "--entrypoints.web.http.redirections.entrypoint.to=websecure"
      - "--entrypoints.web.http.redirections.entrypoint.scheme=https"

      - "--entryPoints.websecure.address=:443"
      - "--entrypoints.websecure.http.tls=true"
      - "--entrypoints.websecure.http.tls.certResolver=le"
      {% if backbone__acme_dns_challenge__enabled %}

      - "--entrypoints.websecure.http.tls.domains[0].main={{ ansible_fqdn }}"
      - "--entrypoints.websecure.http.tls.domains[0].sans=*.{{ ansible_fqdn }}"
      {% endif %}


      - "--entryPoints.minecraft.address=:25565"
      - "--entryPoints.jellyfin-discovery.address=:7359/udp"
      - "--entryPoints.dlna.address=:1900/udp"
      - "--entryPoints.syncthing.address=:22000"
      - "--entryPoints.syncthing-udp.address=:22000/udp"
      - "--entryPoints.syncthing-discovery.address=:21027/udp"

      - "--certificatesResolvers.le.acme.email={{ smtp__to }}"
      - "--certificatesResolvers.le.acme.storage=/certs/acme.json"
      - "--certificatesresolvers.le.acme.caserver={{ backbone__acme_ca_server }}"
      - "--certificatesResolvers.le.acme.tlsChallenge=false"
      - "--certificatesresolvers.le.acme.dnschallenge={{ backbone__acme_dns_challenge__enabled | to_json }}"
      - "--certificatesresolvers.le.acme.dnschallenge.provider={{ backbone__acme_dns_challenge__provider }}"
      - "--certificatesresolvers.le.acme.dnschallenge.delaybeforecheck=30"
      - "--certificatesResolvers.le.acme.httpChallenge={{ backbone__acme_http_challenge__enabled | to_json }}"
      - "--certificatesResolvers.le.acme.httpChallenge.entryPoint=web"
    environment:
      - "{{ backbone__acme_dns_challenge__api_key_variable }}={{ backbone__acme_dns_challenge__api_key }}"
    ports:
      - 80:80 # HTTP
      - 443:443 # HTTPS
      - 25565:25565 # Minecraft
      - 7359:7359/udp # Jellyfin client discovery
      - 1900:1900/udp # DLNA (for Jellyfin)
      - 22000:22000/tcp # syncthing (TCP)
      - 22000:22000/udp # syncthing (UDP)
      - 21027:21027/udp # syncthing discovery 
    volumes:
      # So that Traefik can listen to the Docker events
      - /var/run/docker.sock:/var/run/docker.sock
      # certificates storage
      - "{{ docker_mounts_directory }}/traefik:/certs"
    mem_limit: 128m
    labels:
      # allow access to traefik UI
      - traefik.enable=true
      - traefik.http.routers.traefik.entryPoints=websecure
      - traefik.http.routers.traefik.rule=Host(`routing.{{ ansible_fqdn }}`)
      - traefik.http.routers.traefik.service=api@internal
      - traefik.http.routers.traefik.middlewares=auth,traefik-compress

      # Common middlewares definitions
      - traefik.http.middlewares.auth.basicauth.users=${TRAEFIK_DASH_USERS}
      - traefik.http.middlewares.lan-whitelist.ipwhitelist.sourcerange=192.168.1.0/24,172.18.0.0/24

      # Adds the compress middleware so its available to all containers that may need it
      - traefik.http.middlewares.traefik-compress.compress=true

  vpn:
    image: qmcgaw/gluetun:v3
    container_name: vpn
    cap_add:
      - NET_ADMIN
    devices:
      - /dev/net/tun:/dev/net/tun
    restart: unless-stopped
    networks:
      - web
    ports:
      - 8888:8888/tcp # HTTP proxy
      - 8388:8388/tcp # Shadowsocks
      - 8388:8388/udp # Shadowsocks
      - 6881:6881
      - 6881:6881/udp
    volumes:
      - "{{ docker_mounts_directory }}/gluetun:/gluetun"
    environment:
      # See https://github.com/qdm12/gluetun/wiki
      - VPN_SERVICE_PROVIDER={{ vpn__service_provider }}
      # OpenVPN:
      - OPENVPN_USER={{ vpn__user }}
      - OPENVPN_PASSWORD={{ vpn__pass }}
      - SERVER_COUNTRIES=Switzerland # Switzerland has the most P2P compatible servers
      # Timezone for accurate log times
      - TZ={{ iana_timezone }}
      # Server list updater. See https://github.com/qdm12/gluetun/wiki/Updating-Servers#periodic-update
      - UPDATER_PERIOD=24h
    labels:
      - traefik.enable=true
      - traefik.docker.network=web
      # Torrents
      - traefik.http.routers.torrent.entryPoints=websecure
      - traefik.http.routers.torrent.rule=Host(`torrent.{{ ansible_fqdn }}`)
      - traefik.http.routers.torrent.service=torrent
      - traefik.http.services.torrent.loadBalancer.server.port=9091
      - traefik.http.routers.torrent.middlewares=auth
      # Usenet
      - traefik.http.routers.usenet.entryPoints=websecure
      - traefik.http.routers.usenet.rule=Host(`usenet.{{ ansible_fqdn }}`)
      - traefik.http.routers.usenet.service=usenet
      - traefik.http.services.usenet.loadBalancer.server.port=8080
    mem_limit: 364m

networks:
  web:
    external: true

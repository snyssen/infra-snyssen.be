version: "3"
services:
  reverse-proxy:
    image: traefik
    restart: always
    container_name: traefik
    networks:
      - web
    command:
      - "--api=true"
      - "--api.dashboard=true"
      - "--providers.docker=true"
      - "--providers.docker.exposedbydefault=false"

      - "--entryPoints.web.address=:80"
      - "--entrypoints.web.http.redirections.entrypoint.to=websecure"
      - "--entrypoints.web.http.redirections.entrypoint.scheme=https"

      - "--entryPoints.websecure.address=:443"


      - "--certificatesResolvers.le.acme.email={{ smtp.to }}"
      - "--certificatesResolvers.le.acme.storage=acme.json"
      - "--certificatesresolvers.le.acme.caserver={{ backbone.acme_ca_server }}"
      - "--certificatesResolvers.le.acme.tlsChallenge=false"
      - "--certificatesresolvers.le.acme.dnschallenge={{ backbone.acme_dns_challenge.enabled | to_json }}"
      - "--certificatesresolvers.le.acme.dnschallenge.provider={{ backbone.acme_dns_challenge.provider }}"
      - "--certificatesresolvers.le.acme.dnschallenge.delaybeforecheck=30"
      - "--certificatesResolvers.le.acme.httpChallenge={{ backbone.acme_http_challenge.enabled | to_json }}"
      - "--certificatesResolvers.le.acme.httpChallenge.entryPoint=web"
    environment:
      - "{{ backbone.acme_dns_challenge.api_key_variable }}={{ backbone.acme_dns_challenge.api_key }}"
    ports:
      - 80:80
      - 443:443
    volumes:
      # So that Traefik can listen to the Docker events
      - /var/run/docker.sock:/var/run/docker.sock
      # certificates storage
      - "{{ docker_mounts_directory }}/traefik/acme.json:/acme.json"
    labels:
      # allow access to traefik UI
      - traefik.enable=true
      - traefik.http.routers.api.entryPoints=websecure
      - traefik.http.routers.api.rule=Host(`routing.{{ ansible_fqdn }}`)
      - traefik.http.routers.api.service=api@internal
      - traefik.http.routers.api.middlewares=auth
      - traefik.http.middlewares.auth.basicauth.users=${TRAEFIK_DASH_USERS}
      - traefik.http.routers.api.tls=true
      - traefik.http.routers.api.tls.certresolver=le

networks:
  web:
    external: true

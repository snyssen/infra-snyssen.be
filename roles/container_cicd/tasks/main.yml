- name: Ensuring Gitea client ID is set
  ansible.builtin.pause:
    prompt: |-

      Gitea client ID is not set.
      Connect into Gitea and go to /user/settings/applications and add a new oauth2 application.
      Then, save both the client ID and client secret and enter the client ID here
  register: cicd__drone__gitea_client_id_input
  when: not cicd__drone__gitea_client_id

- name: Ensuring Gitea client secret is set
  ansible.builtin.pause:
    prompt: |-

      Now, copy the client secret here
  register: cicd__drone__gitea_client_secret_input
  when: not cicd__drone__gitea_client_secret

- ansible.builtin.set_fact:
    cicd__drone__gitea_client_id: "{{ cicd__drone__gitea_client_id | default(cicd__drone__gitea_client_id_input.user_input) }}"
    cicd__drone__gitea_client_secret: "{{ cicd__drone__gitea_client_secret | default(cicd__drone__gitea_client_secret_input.user_input) }}"

- name: Creating folders
  ansible.builtin.file:
    path: "{{ item }}"
    state: directory
  loop:
    - "{{ docker_mounts_directory }}/drone/postgresql"
    - "{{ docker_compose_directory }}/cicd/hooks/"
    - /mnt/storage/backups/drone

- name: Deploying hooks for database backups
  ansible.builtin.copy:
    src: pgsql_backups_hooks
    dest: "{{ docker_compose_directory }}/cicd/hooks/"
    mode: 0770

- ansible.builtin.include_role:
    name: snyssen.compose_deploy
  vars:
    container_name: cicd

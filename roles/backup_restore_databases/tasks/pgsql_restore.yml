- name: "[{{ db_restore_selected_individual.value.type }} - {{ db_restore_selected_individual.key }}] Ensuring containers are started"
  ansible.builtin.include_role:
    name: stacks-action
  vars:
    stacks_state: present
    stacks_include:
      - "{{ db_restore_selected_individual.key }}"

- name: "[{{ db_restore_selected_individual.value.type }} - {{ db_restore_selected_individual.key }}] Restoring database {{ db_restore_selected_individual.value.database }}"
  community.docker.docker_container_exec:
    container: "{{ db_restore_selected_individual.key }}_postgres_backups"
    command: >-
      bash -c
      "PGPASSWORD={{ db_restore_selected_individual.value.password }}
      pg_restore -h {{db_restore_selected_individual.key}}_postgres -U {{ db_restore_selected_individual.value.user }} -d {{ db_restore_selected_individual.value.database }} --clean --if-exists
      /backups/{{ db_selected_restore.user_input }}"

- name: "[{{ db_restore_selected_individual.value.type }} - {{ db_restore_selected_individual.key }}] Restarting stack"
  ansible.builtin.include_role:
    name: stacks-action
  vars:
    stacks_state: restart
    stacks_include:
      - "{{ db_restore_selected_individual.key }}"

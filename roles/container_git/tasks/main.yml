- name: Creating git user
  become: yes
  ansible.builtin.user:
    name: git
    password_lock: yes # Don't allow login with password
    generate_ssh_key: yes
    ssh_key_comment: Gitea Host Key
    state: present
  register: git_user_creation_result

- name: Adding git user SSH key to its own authorized keys
  become: yes
  ansible.posix.authorized_key:
    user: git
    key: "{{ git_user_creation_result.ssh_public_key }}"
    state: present

- name: Copying Gitea SSH shim script
  become: yes
  ansible.builtin.copy:
    src: gitea_ssh_shim.sh
    dest: /usr/local/bin/gitea
    owner: "{{ git_user_creation_result.uid }}"
    group: "{{ git_user_creation_result.group }}"
    mode: "711"

- name: Creating folder for gitea
  become: yes
  ansible.builtin.file:
    path: /mnt/storage/gitea
    state: directory
    owner: "{{ git_user_creation_result.uid }}"
    group: "{{ git_user_creation_result.group }}"
    mode: "700"

- name: Creating folders for postgres
  ansible.builtin.file:
    path: "{{ item }}"
    state: directory
  with_items:
    - "{{ docker_mounts_directory }}/git/postgresql"
    - /mnt/storage/backups/gitea

- ansible.builtin.include_role:
    name: container_deploy
  vars:
    container_name: git

- name: Wait for gitea to startup before ensuing commands
  ansible.builtin.pause:
    seconds: 15

- name: Creating user account
  community.docker.docker_container_exec:
    container: gitea
    command: "gitea admin user create --username {{ git__gitea__admin_username }} --password {{ git__gitea__admin_password }} --email {{ git__gitea__admin_email }} --admin"
    user: git
  register: gitea_user_creation
  changed_when: "'successfully created' in gitea_user_creation.stdout"
  failed_when:
    - gitea_user_creation.rc > 0
    - "'user already exists' not in gitea_user_creation.stdout"
  when: docker_compose_state != 'absent' # on restores containers are not started and this command should not be run

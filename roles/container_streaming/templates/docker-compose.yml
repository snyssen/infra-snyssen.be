services:
  jellyfin:
    image: ghcr.io/jellyfin/jellyfin:10.10.7@sha256:e4d1dc5374344446a3a78e43dd211247f22afba84ea2e5a13cbe1a94e1ff2141
    restart: unless-stopped
    container_name: jellyfin
    networks:
      - web
      - monitoring
      - ldap
    user: "33:{{ ansible_user_gid }}"
    environment:
      - JELLYFIN_DATA_DIR=/data
      - JELLYFIN_CONFIG_DIR=/config
      - JELLYFIN_CACHE_DIR=/cache
      - JELLYFIN_LOG_DIR=/logs

      - JELLYFIN_PublishedServerUrl=https://streaming.{{ ansible_fqdn }}
      - JELLYFIN_playlists__allowDuplicates=false
    devices:
      - /dev/dri:/dev/dri # allow use of Intel QuickSync for transcoding
    group_add:
      - "109" # Adds render group
    labels:
      - traefik.enable=true
      - traefik.docker.network=web
      - traefik.http.routers.jellyfin.entryPoints=websecure
      - traefik.http.routers.jellyfin.rule=Host(`streaming.{{ ansible_fqdn }}`) && !Path(`/metrics`)
      - traefik.http.services.jellyfin.loadBalancer.server.port=8096
      # jellyfin middleware, see https://jellyfin.org/docs/general/networking/traefik2.html
      - traefik.http.routers.jellyfin.middlewares=jellyfin-mw
      - traefik.http.middlewares.jellyfin-mw.headers.customResponseHeaders.X-Robots-Tag=noindex,nofollow,nosnippet,noarchive,notranslate,noimageindex
      - traefik.http.middlewares.jellyfin-mw.headers.SSLRedirect=true
      - traefik.http.middlewares.jellyfin-mw.headers.SSLHost=streaming.{{ ansible_fqdn }}
      - traefik.http.middlewares.jellyfin-mw.headers.SSLForceHost=true
      - traefik.http.middlewares.jellyfin-mw.headers.STSSeconds=315360000
      - traefik.http.middlewares.jellyfin-mw.headers.STSIncludeSubdomains=true
      - traefik.http.middlewares.jellyfin-mw.headers.STSPreload=true
      - traefik.http.middlewares.jellyfin-mw.headers.forceSTSHeader=true
      - traefik.http.middlewares.jellyfin-mw.headers.frameDeny=true
      - traefik.http.middlewares.jellyfin-mw.headers.contentTypeNosniff=true
      - traefik.http.middlewares.jellyfin-mw.headers.browserXSSFilter=true
      - traefik.http.middlewares.jellyfin-mw.headers.customFrameOptionsValue='allow-from https://streaming.{{ ansible_fqdn }}'

      - traefik.udp.routers.jellyfin-discovery.entryPoints=jellyfin-discovery
      - traefik.udp.routers.jellyfin-discovery.service=jellyfin-discovery
      - traefik.udp.services.jellyfin-discovery.loadBalancer.server.port=7359
      # TODO: fix DLNA (should be exposed as physical device)
      # - traefik.udp.routers.dlna.entryPoints=dlna
      # - traefik.udp.routers.dlna.service=dlna
      # - traefik.udp.services.dlna.loadBalancer.server.port=1900
    volumes:
      - "{{ docker_mounts_directory }}/jellyfin/data:/data"
      - "{{ docker_mounts_directory }}/jellyfin/config:/config"
      - "{{ docker_mounts_directory }}/jellyfin/cache:/cache"
      - "{{ docker_mounts_directory }}/jellyfin/logs:/logs"
      # all below refer to media folders
      - /mnt/storage/streaming/media:/data/media
    mem_limit: 2.5g

  audiobookshelf:
    image: ghcr.io/advplyr/audiobookshelf:2.30.0@sha256:6fbd7dc95d53c6e168ce69e760b87c334e3b9ba88bf7b8531ed5a116d5d6da03
    restart: unless-stopped
    container_name: audiobookshelf
    networks:
      - web
    user: "33:{{ ansible_user_gid }}"
    labels:
      - traefik.enable=true
      - traefik.docker.network=web
      - traefik.http.routers.audiobookshelf.entryPoints=websecure
      - traefik.http.routers.audiobookshelf.rule=Host(`audiobooks.{{ ansible_fqdn }}`)
    volumes:
      - /mnt/storage/streaming/media/audiobooks:/audiobooks
      - /mnt/storage/streaming/media/audiobooks_vi:/audiobooks_vi
      - /mnt/storage/streaming/media/podcasts:/podcasts
      - /mnt/storage/streaming/media/podcasts_vi:/podcasts_vi
      - "{{ docker_mounts_directory }}/audiobookshelf/config:/config"
      - "{{ docker_mounts_directory }}/audiobookshelf/metadata:/metadata"
    mem_limit: 256m

  torrent:
    image: lscr.io/linuxserver/transmission:4.0.6@sha256:fa4904b824a230d6bf222942f16a775adf40102b6455f4a5194843f44eccf73f
    container_name: torrent
    network_mode: container:vpn
    environment:
      - PUID=33
      - PGID={{ ansible_user_gid }}
      - TZ={{ iana_timezone }}
    volumes:
      - /mnt/storage/torrent:/config
      - /mnt/storage/streaming/torrent:/data/torrent
    restart: unless-stopped
    mem_limit: 712m

  usenet:
    image: lscr.io/linuxserver/sabnzbd:4.5.3@sha256:65aa549ef6ef694ad15f19af1f290847ea6898707a330142c9763bcc5981511b
    container_name: usenet
    network_mode: container:vpn
    environment:
      - PUID=33
      - PGID={{ ansible_user_gid }}
      - TZ={{ iana_timezone }}
    volumes:
      - /mnt/storage/usenet:/config
      - /mnt/storage/streaming/usenet:/data/usenet
    restart: unless-stopped
    mem_limit: 256m

  sonarr:
    image: lscr.io/linuxserver/sonarr:4.0.15@sha256:328d322af2bb8d7211a9c43a26ff5e658ba3e6f47a695e8fb9ff806bfeab0f04
    container_name: sonarr
    environment:
      - PUID=33
      - PGID={{ ansible_user_gid}}
    networks:
      - web
    labels:
      - traefik.enable=true
      - traefik.http.routers.sonarr.entryPoints=websecure
      - traefik.http.routers.sonarr.rule=Host(`sonarr.{{ ansible_fqdn }}`)
      - traefik.http.services.sonarr.loadBalancer.server.port=8989
      - traefik.http.routers.sonarr.middlewares=authelia@docker
    volumes:
      - "{{ docker_mounts_directory }}/sonarr/config:/config"
      - /mnt/storage/streaming:/data
    restart: unless-stopped
    mem_limit: 1g

  radarr:
    image: lscr.io/linuxserver/radarr:5.27.5@sha256:af03fa6a993ee7efb65f6121ebd8c89de4a47aa1181cec03832e292a1446111f
    container_name: radarr
    environment:
      - PUID=33
      - PGID={{ ansible_user_gid }}
      - TZ=Europe/Brussels
    networks:
      - web
    labels:
      - traefik.enable=true
      - traefik.http.routers.radarr.entryPoints=websecure
      - traefik.http.routers.radarr.rule=Host(`radarr.{{ ansible_fqdn }}`)
      - traefik.http.services.radarr.loadBalancer.server.port=7878
      - traefik.http.routers.radarr.middlewares=authelia@docker
    volumes:
      - "{{ docker_mounts_directory }}/radarr/config:/config"
      - /mnt/storage/streaming:/data
    restart: unless-stopped
    mem_limit: 1g

  lidarr:
    image: lscr.io/linuxserver/lidarr:8.1.2135@sha256:8455e2c2f3a7e0fb56ab4de6be924d81aa441bfe9a740cf110d46b25a39b42ba
    container_name: lidarr
    environment:
      - PUID=33
      - PGID={{ ansible_user_gid}}
      - TZ=Europe/Brussels
    networks:
      - web
    labels:
      - traefik.enable=true
      - traefik.http.routers.lidarr.entryPoints=websecure
      - traefik.http.routers.lidarr.rule=Host(`lidarr.{{ ansible_fqdn }}`)
      - traefik.http.services.lidarr.loadBalancer.server.port=8686
      - traefik.http.routers.lidarr.middlewares=authelia@docker
    volumes:
      - "{{ docker_mounts_directory }}/lidarr/config:/config"
      - /mnt/storage/streaming:/data
    restart: unless-stopped
    mem_limit: 1g

  prowlarr:
    image: lscr.io/linuxserver/prowlarr:2.0.5@sha256:964485823771c102427a0c1cd896cf6b576add6f21bd041498b92cb040ee7270
    container_name: prowlarr
    environment:
      - PUID=33
      - PGID={{ ansible_user_gid}}
      - TZ=Europe/Brussels
    networks:
      - web
    labels:
      - traefik.enable=true
      - traefik.http.routers.prowlarr.entryPoints=websecure
      - traefik.http.routers.prowlarr.rule=Host(`prowlarr.{{ ansible_fqdn }}`)
      - traefik.http.services.prowlarr.loadBalancer.server.port=9696
      - traefik.http.routers.prowlarr.middlewares=authelia@docker
    volumes:
      - "{{ docker_mounts_directory }}/prowlarr/config:/config"
    restart: unless-stopped
    mem_limit: 1g

  bazarr:
    image: lscr.io/linuxserver/bazarr:1.5.3@sha256:005f97fcab0fd7402cd7ff3c09f5ff4da4c63ca51be487e90d5c4dc8a8f85a45
    container_name: bazarr
    environment:
      - PUID=33
      - PGID={{ ansible_user_gid}}
      - TZ=Europe/Brussels
    networks:
      - web
    labels:
      - traefik.enable=true
      - traefik.http.routers.bazarr.entryPoints=websecure
      - traefik.http.routers.bazarr.rule=Host(`bazarr.{{ ansible_fqdn }}`)
      - traefik.http.services.bazarr.loadBalancer.server.port=6767
      - traefik.http.routers.bazarr.middlewares=authelia@docker
    volumes:
      - "{{ docker_mounts_directory }}/bazarr/config:/config"
      - /mnt/storage/streaming:/data
    restart: unless-stopped
    mem_limit: 1g

  pinchflat:
    image: ghcr.io/kieraneglin/pinchflat:v2025.6.6@sha256:4e975edf58f0861a5cbfe8fc6aac4851ff5a02dfc3f05ffeea4982e3084a5a4a
    user: "33:{{ ansible_user_gid }}"
    environment:
      # Set the timezone to your local timezone
      - TZ={{ iana_timezone }}
    networks:
      - web
    labels:
      - traefik.enable=true
      - traefik.http.routers.pinchflat.entryPoints=websecure
      - traefik.http.routers.pinchflat.rule=Host(`yt.{{ ansible_fqdn }}`)
      - traefik.http.services.pinchflat.loadBalancer.server.port=8945
      - traefik.http.routers.pinchflat.middlewares=authelia@docker
    volumes:
      - "{{ docker_mounts_directory }}/pinchflat/config:/config"
      - /mnt/storage/streaming/media/tv:/downloads

  lidatube:
    image: thewicklowwolf/lidatube:0.2.38@sha256:7766465cb97f4e236505eaebce06ec6d4b2b3a0fde1fd789926e001a80b761d4
    container_name: lidatube
    environment:
      - PUID=33
      - PGID={{ ansible_user_gid}}
    volumes:
      - "{{ docker_mounts_directory }}/lidatube/config:/lidatube/config"
      - /mnt/storage/streaming/media/music:/lidatube/downloads
      - /etc/localtime:/etc/localtime:ro
    networks:
      - web
    labels:
      - traefik.enable=true
      - traefik.http.routers.lidatube.entryPoints=websecure
      - traefik.http.routers.lidatube.rule=Host(`lidatube.{{ ansible_fqdn }}`)
      - traefik.http.services.lidatube.loadBalancer.server.port=5000
      - traefik.http.routers.lidatube.middlewares=authelia@docker
    restart: unless-stopped

  lidify:
    image: thewicklowwolf/lidify:0.2.3@sha256:958eaddeef8195470b974ee03512d9a5c31ad2af3167f7824448fb026fa9c94a
    container_name: lidify
    environment:
      - PUID=33
      - PGID={{ ansible_user_gid}}
    volumes:
      - "{{ docker_mounts_directory }}/lidify/config:/lidify/config"
      - /etc/localtime:/etc/localtime:ro
    networks:
      - web
    labels:
      - traefik.enable=true
      - traefik.http.routers.lidify.entryPoints=websecure
      - traefik.http.routers.lidify.rule=Host(`lidify.{{ ansible_fqdn }}`)
      - traefik.http.services.lidify.loadBalancer.server.port=5000
      - traefik.http.routers.lidify.middlewares=authelia@docker
    restart: unless-stopped

networks:
  web:
    external: true
  monitoring:
    external: true
  ldap:
    external: true

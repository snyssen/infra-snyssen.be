services:
  jellyfin:
    image: ghcr.io/jellyfin/jellyfin:10.10.3@sha256:17c3a8d9dddb97789b5f37112840ebf96566442c14d4754193a6c2eb154bc221
    restart: unless-stopped
    container_name: jellyfin
    networks:
      - web
      - monitoring
      - ldap
    user: "{{ ansible_user_uid}}:{{ ansible_user_gid }}"
    environment:
      - JELLYFIN_DATA_DIR=/data
      - JELLYFIN_CONFIG_DIR=/config
      - JELLYFIN_CACHE_DIR=/cache
      - JELLYFIN_LOG_DIR=/logs

      - JELLYFIN_PublishedServerUrl=https://streaming.{{ ansible_fqdn }}
      - JELLYFIN_playlists__allowDuplicates=false
    devices:
      - /dev/dri:/dev/dri # allow use of Intel QuickSync for transcoding
    group_add:
      - "109" # Adds render group
    labels:
      - traefik.enable=true
      - traefik.docker.network=web
      - traefik.http.routers.jellyfin.entryPoints=websecure
      - traefik.http.routers.jellyfin.rule=Host(`streaming.{{ ansible_fqdn }}`) && !Path(`/metrics`)
      - traefik.http.services.jellyfin.loadBalancer.server.port=8096
      # jellyfin middleware, see https://jellyfin.org/docs/general/networking/traefik2.html
      - traefik.http.routers.jellyfin.middlewares=jellyfin-mw
      - traefik.http.middlewares.jellyfin-mw.headers.customResponseHeaders.X-Robots-Tag=noindex,nofollow,nosnippet,noarchive,notranslate,noimageindex
      - traefik.http.middlewares.jellyfin-mw.headers.SSLRedirect=true
      - traefik.http.middlewares.jellyfin-mw.headers.SSLHost=streaming.{{ ansible_fqdn }}
      - traefik.http.middlewares.jellyfin-mw.headers.SSLForceHost=true
      - traefik.http.middlewares.jellyfin-mw.headers.STSSeconds=315360000
      - traefik.http.middlewares.jellyfin-mw.headers.STSIncludeSubdomains=true
      - traefik.http.middlewares.jellyfin-mw.headers.STSPreload=true
      - traefik.http.middlewares.jellyfin-mw.headers.forceSTSHeader=true
      - traefik.http.middlewares.jellyfin-mw.headers.frameDeny=true
      - traefik.http.middlewares.jellyfin-mw.headers.contentTypeNosniff=true
      - traefik.http.middlewares.jellyfin-mw.headers.browserXSSFilter=true
      - traefik.http.middlewares.jellyfin-mw.headers.customFrameOptionsValue='allow-from https://streaming.{{ ansible_fqdn }}'

      - traefik.udp.routers.jellyfin-discovery.entryPoints=jellyfin-discovery
      - traefik.udp.routers.jellyfin-discovery.service=jellyfin-discovery
      - traefik.udp.services.jellyfin-discovery.loadBalancer.server.port=7359
      # TODO: fix DLNA (should be exposed as physical device)
      # - traefik.udp.routers.dlna.entryPoints=dlna
      # - traefik.udp.routers.dlna.service=dlna
      # - traefik.udp.services.dlna.loadBalancer.server.port=1900
    volumes:
      - "{{ docker_mounts_directory }}/jellyfin/data:/data"
      - "{{ docker_mounts_directory }}/jellyfin/config:/config"
      - "{{ docker_mounts_directory }}/jellyfin/cache:/cache"
      - "{{ docker_mounts_directory }}/jellyfin/logs:/logs"
      # all below refer to media folders
      - /mnt/storage/streaming/media:/data/media
    mem_limit: 2.5g

  audiobookshelf:
    image: ghcr.io/advplyr/audiobookshelf:2.17.5@sha256:aa88c9f4652872a2a72043511a87d17ec743b60f53e8024e9868ebec5aae59bd
    restart: unless-stopped
    container_name: audiobookshelf
    networks:
      - web
    user: "{{ ansible_user_uid}}:{{ ansible_user_gid }}"
    labels:
      - traefik.enable=true
      - traefik.docker.network=web
      - traefik.http.routers.audiobookshelf.entryPoints=websecure
      - traefik.http.routers.audiobookshelf.rule=Host(`audiobooks.{{ ansible_fqdn }}`)
    volumes:
      - /mnt/storage/streaming/media/audiobooks:/audiobooks
      - /mnt/storage/streaming/media/podcasts:/podcasts
      - "{{ docker_mounts_directory }}/audiobookshelf/config:/config"
      - "{{ docker_mounts_directory }}/audiobookshelf/metadata:/metadata"
    mem_limit: 256m

  torrent:
    image: lscr.io/linuxserver/transmission:4.0.6@sha256:25692848ea167ef57f3914a55393d48b7a96c201a0dcc2002e316bcd146ddd8c
    container_name: torrent
    network_mode: container:vpn
    environment:
      - PUID={{ ansible_user_uid }}
      - PGID={{ ansible_user_gid }}
      - TZ={{ iana_timezone }}
    volumes:
      - /mnt/storage/torrent:/config
      - /mnt/storage/streaming/torrent:/data/torrent
    restart: unless-stopped
    mem_limit: 712m

  usenet:
    image: lscr.io/linuxserver/sabnzbd:4.3.3@sha256:ff682bedd109c45dbad25ab8edcc4f3b837b9ac48c39751fbbb33a858eab97d0
    container_name: usenet
    network_mode: container:vpn
    environment:
      - PUID={{ ansible_user_uid }}
      - PGID={{ ansible_user_gid }}
      - TZ={{ iana_timezone }}
    volumes:
      - /mnt/storage/usenet:/config
      - /mnt/storage/streaming/usenet:/data/usenet
    restart: unless-stopped
    mem_limit: 256m

  sonarr:
    image: lscr.io/linuxserver/sonarr:4.0.11@sha256:4ba3bfa985b911129b449734bbf63749a03f6ef69b8ca37f2ecd74d46fabef1f
    container_name: sonarr
    environment:
      - PUID={{ ansible_user_uid}}
      - PGID={{ ansible_user_gid}}
    networks:
      - web
    labels:
      - traefik.enable=true
      - traefik.http.routers.sonarr.entryPoints=websecure
      - traefik.http.routers.sonarr.rule=Host(`sonarr.{{ ansible_fqdn }}`)
      - traefik.http.services.sonarr.loadBalancer.server.port=8989
      - traefik.http.routers.sonarr.middlewares=authelia@docker
    volumes:
      - "{{ docker_mounts_directory }}/sonarr/config:/config"
      - /mnt/storage/streaming:/data
    restart: unless-stopped
    mem_limit: 1g

  radarr:
    image: lscr.io/linuxserver/radarr:5.15.1@sha256:18d7873c8b773c10944c475fe96ca8ae79186512d3c6f403bcbd4409c9c4acfc
    container_name: radarr
    environment:
      - PUID={{ ansible_user_uid }}
      - PGID={{ ansible_user_gid }}
      - TZ=Europe/Brussels
    networks:
      - web
    labels:
      - traefik.enable=true
      - traefik.http.routers.radarr.entryPoints=websecure
      - traefik.http.routers.radarr.rule=Host(`radarr.{{ ansible_fqdn }}`)
      - traefik.http.services.radarr.loadBalancer.server.port=7878
      - traefik.http.routers.radarr.middlewares=authelia@docker
    volumes:
      - "{{ docker_mounts_directory }}/radarr/config:/config"
      - /mnt/storage/streaming:/data
    restart: unless-stopped
    mem_limit: 1g

  lidarr:
    image: lscr.io/linuxserver/lidarr:8.1.2135@sha256:8455e2c2f3a7e0fb56ab4de6be924d81aa441bfe9a740cf110d46b25a39b42ba
    container_name: lidarr
    environment:
      - PUID={{ ansible_user_uid}}
      - PGID={{ ansible_user_gid}}
      - TZ=Europe/Brussels
    networks:
      - web
    labels:
      - traefik.enable=true
      - traefik.http.routers.lidarr.entryPoints=websecure
      - traefik.http.routers.lidarr.rule=Host(`lidarr.{{ ansible_fqdn }}`)
      - traefik.http.services.lidarr.loadBalancer.server.port=8686
      - traefik.http.routers.lidarr.middlewares=authelia@docker
    volumes:
      - "{{ docker_mounts_directory }}/lidarr/config:/config"
      - /mnt/storage/streaming:/data
    restart: unless-stopped
    mem_limit: 1g

  readarr:
    image: lscr.io/linuxserver/readarr:0.4.5-develop@sha256:2f751d1d9dfdb3b4eaee8a57f4186fe384fa466475e122830a90ca4759df4265
    container_name: readarr
    environment:
      - PUID={{ ansible_user_uid}}
      - PGID={{ ansible_user_gid}}
      - TZ=Europe/Brussels
    networks:
      - web
    labels:
      - traefik.enable=true
      - traefik.http.routers.readarr.entryPoints=websecure
      - traefik.http.routers.readarr.rule=Host(`readarr.{{ ansible_fqdn }}`)
      - traefik.http.services.readarr.loadBalancer.server.port=8787
      - traefik.http.routers.readarr.middlewares=authelia@docker
    volumes:
      - "{{ docker_mounts_directory }}/readarr/config:/config"
      - /mnt/storage/streaming:/data
    restart: unless-stopped
    mem_limit: 1g

  prowlarr:
    image: lscr.io/linuxserver/prowlarr:1.27.0@sha256:6b4ce037964e4bf50d341bc9b3aa800238d46ff7de4d7ecc029280c4bb5b2e68
    container_name: prowlarr
    environment:
      - PUID={{ ansible_user_uid}}
      - PGID={{ ansible_user_gid}}
      - TZ=Europe/Brussels
    networks:
      - web
    labels:
      - traefik.enable=true
      - traefik.http.routers.prowlarr.entryPoints=websecure
      - traefik.http.routers.prowlarr.rule=Host(`prowlarr.{{ ansible_fqdn }}`)
      - traefik.http.services.prowlarr.loadBalancer.server.port=9696
      - traefik.http.routers.prowlarr.middlewares=authelia@docker
    volumes:
      - "{{ docker_mounts_directory }}/prowlarr/config:/config"
    restart: unless-stopped
    mem_limit: 1g

  bazarr:
    image: lscr.io/linuxserver/bazarr:1.4.5@sha256:954b303893a33b84075857534ad863dc349b8a9e7e838f134e037558ea84823f
    container_name: bazarr
    environment:
      - PUID={{ ansible_user_uid}}
      - PGID={{ ansible_user_gid}}
      - TZ=Europe/Brussels
    networks:
      - web
    labels:
      - traefik.enable=true
      - traefik.http.routers.bazarr.entryPoints=websecure
      - traefik.http.routers.bazarr.rule=Host(`bazarr.{{ ansible_fqdn }}`)
      - traefik.http.services.bazarr.loadBalancer.server.port=6767
      - traefik.http.routers.bazarr.middlewares=authelia@docker
    volumes:
      - "{{ docker_mounts_directory }}/bazarr/config:/config"
      - /mnt/storage/streaming:/data
    restart: unless-stopped
    mem_limit: 1g

  ytdl-sub:
    image: ghcr.io/jmbannon/ytdl-sub:ubuntu-2023.11.25@sha256:5571a2db1b596f4a18d03281e483614ac336b012bff427e84e1fe6b91b19ac15
    container_name: ytdl-sub
    environment:
      - PUID={{ ansible_user_uid}}
      - PGID={{ ansible_user_gid}}
      - TZ=Europe/Brussels
      - DOCKER_MODS=linuxserver/mods:universal-cron|linuxserver/mods:universal-stdout-logs
      - LOGS_TO_STDOUT=/config/ytdl-sub.log
    devices:
      - /dev/dri:/dev/dri
    volumes:
      - "{{ docker_mounts_directory }}/ytdl-sub/config:/config"
      - /mnt/storage/streaming/ytdl-sub/downloads:/downloads
      - /mnt/storage/streaming/media/tv:/tv
      - /mnt/storage/streaming/media/movies:/movies
      - /mnt/storage/streaming/media/music:/music
    restart: unless-stopped
    mem_limit: 1g

  lidatube:
    image: thewicklowwolf/lidatube:0.2.9@sha256:f33d59266bcf30be46c8f925d8f1e25f983fc46dbadd770a94c6fae8ffd171cf
    container_name: lidatube
    volumes:
      - "{{ docker_mounts_directory }}/lidatube/config:/lidatube/config"
      - /mnt/storage/streaming/media/music:/lidatube/downloads
      - /etc/localtime:/etc/localtime:ro
    networks:
      - web
    labels:
      - traefik.enable=true
      - traefik.http.routers.lidatube.entryPoints=websecure
      - traefik.http.routers.lidatube.rule=Host(`lidatube.{{ ansible_fqdn }}`)
      - traefik.http.services.lidatube.loadBalancer.server.port=5000
      - traefik.http.routers.lidatube.middlewares=authelia@docker
    restart: unless-stopped

  lidify:
    image: thewicklowwolf/lidify:0.2.1@sha256:f40e6b6cea9e3cd47c454eaa7a060c479fb853c164115fb9b8a75b655987b7a0
    container_name: lidify
    volumes:
      - "{{ docker_mounts_directory }}/lidify/config:/lidify/config"
      - /etc/localtime:/etc/localtime:ro
    networks:
      - web
    labels:
      - traefik.enable=true
      - traefik.http.routers.lidify.entryPoints=websecure
      - traefik.http.routers.lidify.rule=Host(`lidify.{{ ansible_fqdn }}`)
      - traefik.http.services.lidify.loadBalancer.server.port=5000
      - traefik.http.routers.lidify.middlewares=authelia@docker
    restart: unless-stopped

networks:
  web:
    external: true
  monitoring:
    external: true
  ldap:
    external: true

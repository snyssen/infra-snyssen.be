services:
  jellyfin:
    image: ghcr.io/jellyfin/jellyfin:10.10.7@sha256:e4d1dc5374344446a3a78e43dd211247f22afba84ea2e5a13cbe1a94e1ff2141
    restart: unless-stopped
    container_name: jellyfin
    networks:
      - web
      - monitoring
      - ldap
    user: "{{ ansible_user_uid}}:{{ ansible_user_gid }}"
    environment:
      - JELLYFIN_DATA_DIR=/data
      - JELLYFIN_CONFIG_DIR=/config
      - JELLYFIN_CACHE_DIR=/cache
      - JELLYFIN_LOG_DIR=/logs

      - JELLYFIN_PublishedServerUrl=https://streaming.{{ ansible_fqdn }}
      - JELLYFIN_playlists__allowDuplicates=false
    devices:
      - /dev/dri:/dev/dri # allow use of Intel QuickSync for transcoding
    group_add:
      - "109" # Adds render group
    labels:
      - traefik.enable=true
      - traefik.docker.network=web
      - traefik.http.routers.jellyfin.entryPoints=websecure
      - traefik.http.routers.jellyfin.rule=Host(`streaming.{{ ansible_fqdn }}`) && !Path(`/metrics`)
      - traefik.http.services.jellyfin.loadBalancer.server.port=8096
      # jellyfin middleware, see https://jellyfin.org/docs/general/networking/traefik2.html
      - traefik.http.routers.jellyfin.middlewares=jellyfin-mw
      - traefik.http.middlewares.jellyfin-mw.headers.customResponseHeaders.X-Robots-Tag=noindex,nofollow,nosnippet,noarchive,notranslate,noimageindex
      - traefik.http.middlewares.jellyfin-mw.headers.SSLRedirect=true
      - traefik.http.middlewares.jellyfin-mw.headers.SSLHost=streaming.{{ ansible_fqdn }}
      - traefik.http.middlewares.jellyfin-mw.headers.SSLForceHost=true
      - traefik.http.middlewares.jellyfin-mw.headers.STSSeconds=315360000
      - traefik.http.middlewares.jellyfin-mw.headers.STSIncludeSubdomains=true
      - traefik.http.middlewares.jellyfin-mw.headers.STSPreload=true
      - traefik.http.middlewares.jellyfin-mw.headers.forceSTSHeader=true
      - traefik.http.middlewares.jellyfin-mw.headers.frameDeny=true
      - traefik.http.middlewares.jellyfin-mw.headers.contentTypeNosniff=true
      - traefik.http.middlewares.jellyfin-mw.headers.browserXSSFilter=true
      - traefik.http.middlewares.jellyfin-mw.headers.customFrameOptionsValue='allow-from https://streaming.{{ ansible_fqdn }}'

      - traefik.udp.routers.jellyfin-discovery.entryPoints=jellyfin-discovery
      - traefik.udp.routers.jellyfin-discovery.service=jellyfin-discovery
      - traefik.udp.services.jellyfin-discovery.loadBalancer.server.port=7359
      # TODO: fix DLNA (should be exposed as physical device)
      # - traefik.udp.routers.dlna.entryPoints=dlna
      # - traefik.udp.routers.dlna.service=dlna
      # - traefik.udp.services.dlna.loadBalancer.server.port=1900
    volumes:
      - "{{ docker_mounts_directory }}/jellyfin/data:/data"
      - "{{ docker_mounts_directory }}/jellyfin/config:/config"
      - "{{ docker_mounts_directory }}/jellyfin/cache:/cache"
      - "{{ docker_mounts_directory }}/jellyfin/logs:/logs"
      # all below refer to media folders
      - /mnt/storage/streaming/media:/data/media
    mem_limit: 2.5g

  audiobookshelf:
    image: ghcr.io/advplyr/audiobookshelf:2.23.0@sha256:2d8bee3e87e860d67e11e13b5c42d97cb1fe071de53dea5502b3a9292e75e024
    restart: unless-stopped
    container_name: audiobookshelf
    networks:
      - web
    user: "{{ ansible_user_uid}}:{{ ansible_user_gid }}"
    labels:
      - traefik.enable=true
      - traefik.docker.network=web
      - traefik.http.routers.audiobookshelf.entryPoints=websecure
      - traefik.http.routers.audiobookshelf.rule=Host(`audiobooks.{{ ansible_fqdn }}`)
    volumes:
      - /mnt/storage/streaming/media/audiobooks:/audiobooks
      - /mnt/storage/streaming/media/podcasts:/podcasts
      - "{{ docker_mounts_directory }}/audiobookshelf/config:/config"
      - "{{ docker_mounts_directory }}/audiobookshelf/metadata:/metadata"
    mem_limit: 256m

  torrent:
    image: lscr.io/linuxserver/transmission:4.0.6@sha256:6e77d7a45400f74669980d9df7a979b7229a80912f1d216844043bcfe00e65cc
    container_name: torrent
    network_mode: container:vpn
    environment:
      - PUID={{ ansible_user_uid }}
      - PGID={{ ansible_user_gid }}
      - TZ={{ iana_timezone }}
    volumes:
      - /mnt/storage/torrent:/config
      - /mnt/storage/streaming/torrent:/data/torrent
    restart: unless-stopped
    mem_limit: 712m

  usenet:
    image: lscr.io/linuxserver/sabnzbd:4.5.1@sha256:15d7fb05cb46efdb0572ffb2b3b1f6962d8b5f1cf3bb8304f39493ea81fcf066
    container_name: usenet
    network_mode: container:vpn
    environment:
      - PUID={{ ansible_user_uid }}
      - PGID={{ ansible_user_gid }}
      - TZ={{ iana_timezone }}
    volumes:
      - /mnt/storage/usenet:/config
      - /mnt/storage/streaming/usenet:/data/usenet
    restart: unless-stopped
    mem_limit: 256m

  sonarr:
    image: lscr.io/linuxserver/sonarr:4.0.14@sha256:cdf5eb3cfa207d46b066bfbb41b03576c67a1f6ecc8aba19146d0f7349ec79dc
    container_name: sonarr
    environment:
      - PUID={{ ansible_user_uid}}
      - PGID={{ ansible_user_gid}}
    networks:
      - web
    labels:
      - traefik.enable=true
      - traefik.http.routers.sonarr.entryPoints=websecure
      - traefik.http.routers.sonarr.rule=Host(`sonarr.{{ ansible_fqdn }}`)
      - traefik.http.services.sonarr.loadBalancer.server.port=8989
      - traefik.http.routers.sonarr.middlewares=authelia@docker
    volumes:
      - "{{ docker_mounts_directory }}/sonarr/config:/config"
      - /mnt/storage/streaming:/data
    restart: unless-stopped
    mem_limit: 1g

  radarr:
    image: lscr.io/linuxserver/radarr:5.25.0@sha256:36e43720c130ec2d3ed80726d2134af3c6644729f4750abc830fdda7fa71d1e1
    container_name: radarr
    environment:
      - PUID={{ ansible_user_uid }}
      - PGID={{ ansible_user_gid }}
      - TZ=Europe/Brussels
    networks:
      - web
    labels:
      - traefik.enable=true
      - traefik.http.routers.radarr.entryPoints=websecure
      - traefik.http.routers.radarr.rule=Host(`radarr.{{ ansible_fqdn }}`)
      - traefik.http.services.radarr.loadBalancer.server.port=7878
      - traefik.http.routers.radarr.middlewares=authelia@docker
    volumes:
      - "{{ docker_mounts_directory }}/radarr/config:/config"
      - /mnt/storage/streaming:/data
    restart: unless-stopped
    mem_limit: 1g

  lidarr:
    image: lscr.io/linuxserver/lidarr:8.1.2135@sha256:8455e2c2f3a7e0fb56ab4de6be924d81aa441bfe9a740cf110d46b25a39b42ba
    container_name: lidarr
    environment:
      - PUID={{ ansible_user_uid}}
      - PGID={{ ansible_user_gid}}
      - TZ=Europe/Brussels
    networks:
      - web
    labels:
      - traefik.enable=true
      - traefik.http.routers.lidarr.entryPoints=websecure
      - traefik.http.routers.lidarr.rule=Host(`lidarr.{{ ansible_fqdn }}`)
      - traefik.http.services.lidarr.loadBalancer.server.port=8686
      - traefik.http.routers.lidarr.middlewares=authelia@docker
    volumes:
      - "{{ docker_mounts_directory }}/lidarr/config:/config"
      - /mnt/storage/streaming:/data
    restart: unless-stopped
    mem_limit: 1g

  readarr:
    image: lscr.io/linuxserver/readarr:0.4.16-develop@sha256:f2f9280f1db32b6f6782d31a8c38995d604ae2f2008e7eed333bb713dd32b9af
    container_name: readarr
    environment:
      - PUID={{ ansible_user_uid}}
      - PGID={{ ansible_user_gid}}
      - TZ=Europe/Brussels
    networks:
      - web
    labels:
      - traefik.enable=true
      - traefik.http.routers.readarr.entryPoints=websecure
      - traefik.http.routers.readarr.rule=Host(`readarr.{{ ansible_fqdn }}`)
      - traefik.http.services.readarr.loadBalancer.server.port=8787
      - traefik.http.routers.readarr.middlewares=authelia@docker
    volumes:
      - "{{ docker_mounts_directory }}/readarr/config:/config"
      - /mnt/storage/streaming:/data
    restart: unless-stopped
    mem_limit: 1g

  prowlarr:
    image: lscr.io/linuxserver/prowlarr:1.36.3@sha256:1a6cdd0cc2350f8527dab39bc8467c9a2553bbbcf75a2c66f882fc53d73d5deb
    container_name: prowlarr
    environment:
      - PUID={{ ansible_user_uid}}
      - PGID={{ ansible_user_gid}}
      - TZ=Europe/Brussels
    networks:
      - web
    labels:
      - traefik.enable=true
      - traefik.http.routers.prowlarr.entryPoints=websecure
      - traefik.http.routers.prowlarr.rule=Host(`prowlarr.{{ ansible_fqdn }}`)
      - traefik.http.services.prowlarr.loadBalancer.server.port=9696
      - traefik.http.routers.prowlarr.middlewares=authelia@docker
    volumes:
      - "{{ docker_mounts_directory }}/prowlarr/config:/config"
    restart: unless-stopped
    mem_limit: 1g

  bazarr:
    image: lscr.io/linuxserver/bazarr:1.5.2@sha256:2458b13b6bdb9beee13acd2c70172140e9f9362488914d9f7cd95a473c3742b7
    container_name: bazarr
    environment:
      - PUID={{ ansible_user_uid}}
      - PGID={{ ansible_user_gid}}
      - TZ=Europe/Brussels
    networks:
      - web
    labels:
      - traefik.enable=true
      - traefik.http.routers.bazarr.entryPoints=websecure
      - traefik.http.routers.bazarr.rule=Host(`bazarr.{{ ansible_fqdn }}`)
      - traefik.http.services.bazarr.loadBalancer.server.port=6767
      - traefik.http.routers.bazarr.middlewares=authelia@docker
    volumes:
      - "{{ docker_mounts_directory }}/bazarr/config:/config"
      - /mnt/storage/streaming:/data
    restart: unless-stopped
    mem_limit: 1g

  ytdl-sub:
    image: ghcr.io/jmbannon/ytdl-sub:2025.05.23@sha256:a16f21b48219e07e9c8217165768a1e4ec6454d2cc27c9c8ecfa469eab1dd776
    container_name: ytdl-sub
    environment:
      - PUID={{ ansible_user_uid}}
      - PGID={{ ansible_user_gid}}
      - TZ=Europe/Brussels
      - CRON_SCHEDULE="0 */6 * * *"
      - CRON_RUN_ON_START=true
    devices:
      - /dev/dri:/dev/dri
    volumes:
      - "{{ docker_mounts_directory }}/ytdl-sub/config:/config"
      - /mnt/storage/streaming/media/tv:/tv
      - /mnt/storage/streaming/media/movies:/movies
      - /mnt/storage/streaming/media/music:/music
    restart: unless-stopped
    mem_limit: 1g

  lidatube:
    image: thewicklowwolf/lidatube:0.2.23@sha256:b06252eb11469dd00cdc64d6c6ea38c087a618453b6afd787cbee14e176218ab
    container_name: lidatube
    volumes:
      - "{{ docker_mounts_directory }}/lidatube/config:/lidatube/config"
      - /mnt/storage/streaming/media/music:/lidatube/downloads
      - /etc/localtime:/etc/localtime:ro
    networks:
      - web
    labels:
      - traefik.enable=true
      - traefik.http.routers.lidatube.entryPoints=websecure
      - traefik.http.routers.lidatube.rule=Host(`lidatube.{{ ansible_fqdn }}`)
      - traefik.http.services.lidatube.loadBalancer.server.port=5000
      - traefik.http.routers.lidatube.middlewares=authelia@docker
    restart: unless-stopped

  lidify:
    image: thewicklowwolf/lidify:0.2.3@sha256:958eaddeef8195470b974ee03512d9a5c31ad2af3167f7824448fb026fa9c94a
    container_name: lidify
    volumes:
      - "{{ docker_mounts_directory }}/lidify/config:/lidify/config"
      - /etc/localtime:/etc/localtime:ro
    networks:
      - web
    labels:
      - traefik.enable=true
      - traefik.http.routers.lidify.entryPoints=websecure
      - traefik.http.routers.lidify.rule=Host(`lidify.{{ ansible_fqdn }}`)
      - traefik.http.services.lidify.loadBalancer.server.port=5000
      - traefik.http.routers.lidify.middlewares=authelia@docker
    restart: unless-stopped

networks:
  web:
    external: true
  monitoring:
    external: true
  ldap:
    external: true

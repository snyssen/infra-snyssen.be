http:
  listeners:
    - name: web
      resources:
        - name: discovery
        - name: human
        - name: oauth
        - name: compat
        - name: graphql
        - name: assets
      binds:
        - address: "[::]:8080"
    - name: internal
      resources:
        - name: health
      binds:
        - host: localhost
          port: 8081
      proxy_protocol: false
  trusted_proxies:
    - 172.16.0.0/12
    - 127.0.0.1/8
    - fd00::/8
    - ::1/128
  public_base: https://matrix-mas.{{ ansible_fqdn }}
  # issuer: http://[::]:8080/
database:
  uri: postgres://matrix_mas:{{ matrix__mas__db_pass }}@postgres/matrix_mas
  max_connections: 10
  min_connections: 0
  connect_timeout: 30
  idle_timeout: 600
  max_lifetime: 1800
secrets:
  encryption: "{{ matrix__mas__encryption_secret }}"
  keys:
    - key_file: /config/keys/one.key
    - key_file: /config/keys/two.key
    - key_file: /config/keys/three.key
    - key_file: /config/keys/four.key
passwords:
  enabled: false
  schemes:
    - version: 1
      algorithm: bcrypt
      unicode_normalization: true
    - version: 2
      algorithm: argon2id
  minimum_complexity: 3
matrix:
  kind: synapse
  homeserver: matrix.{{ ansible_fqdn }}
  secret: "{{ matrix__mas__shared_secret }}"
  endpoint: https://matrix.{{ ansible_fqdn }}/
upstream_oauth2:
  providers:
    - id: "{{ matrix__mas__oidc_id }}"
      synapse_idp_id: oidc-authelia
      issuer: https://auth.snyssen.be
      human_name: Authelia
      client_id: "{{ backbone__authelia__oidc_matrix_clientid }}"
      client_secret: "{{ backbone__authelia__oidc_matrix_clientsecret }}"
      token_endpoint_auth_method: client_secret_post
      scope: email groups openid profile
      pkce_method: always
      fetch_userinfo: true
      claims_imports:
        subject:
          template: "{{ '{{ user.sub }}' }}"
        localpart:
          action: require
          template: "{{ '{{ user.preferred_username }}' }}"
        displayname:
          action: force
          template: "{{ '{{ user.name }}' }}"
        email:
          action: force
          template: "{{ '{{ user.email }}' }}"
          set_email_verification: always

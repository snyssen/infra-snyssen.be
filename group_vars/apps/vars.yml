snapraid_runner_path: /opt/snapraid-runner/snapraid-runner
snapraid_runner_conf: "{{ snapraid_runner_path }}.conf"
snapraid_runner_bin: "{{ snapraid_runner_path }}.py"
snapraid_healthcheck_io_host: https://hc-ping.com
snapraid_runner_healthcheck_io_uuid: "{{ vault_snapraid_runner_healthcheck_io_uuid }}"

backbone__acme_ca_server: "{{ vault_backbone__acme_ca_server }}"
backbone__acme_dns_challenge__enabled: "{{ vault_backbone__acme_dns_challenge__enabled }}"
backbone__acme_dns_challenge__provider: "{{ vault_backbone__acme_dns_challenge__provider }}"
backbone__acme_dns_challenge__api_key: "{{ vault_backbone__acme_dns_challenge__api_key }}"
backbone__acme_dns_challenge__api_key_variable: "{{ vault_backbone__acme_dns_challenge__api_key_variable }}"
backbone__acme_http_challenge__enabled: "{{ vault_backbone__acme_http_challenge__enabled }}"
vpn__service_provider: protonvpn
vpn__user: "{{ vault_vpn__user }}"
vpn__pass: "{{ vault_vpn__pass }}"
backbone__lldap__jwt_secret: "{{ vault_backbone__lldap__jwt_secret }}"
backbone__lldap__key_seed: "{{ vault_backbone__lldap__key_seed }}"
backbone__lldap__db_user: lldap
backbone__lldap__db_pass: "{{ vault_backbone__lldap__db_pass }}"
backbone__lldap__user: "{{ vault_backbone__lldap__user }}"
backbone__lldap__pass: "{{ vault_backbone__lldap__pass }}"
backbone__lldapt__groups: "{{ vault_backbone__lldapt__groups }}"
backbone__authelia__ldap_user: "{{ vault_backbone__authelia__ldap_user }}"
backbone__authelia__ldap_pass: "{{ vault_backbone__authelia__ldap_pass }}"
backbone__authelia__jwt_secret: "{{ vault_backbone__authelia__jwt_secret }}"
backbone__authelia__encryption_key: "{{ vault_backbone__authelia__encryption_key }}"
backbone__authelia__db_user: authelia
backbone__authelia__db_pass: "{{ vault_backbone__authelia__db_pass }}"
backbone__authelia__session_secret: "{{ vault_backbone__authelia__session_secret }}"
backbone__authelia__oidc_hmac_secret: "{{ vault_backbone__authelia__oidc_hmac_secret }}"
backbone__authelia__oidc_nextcloud_clientid: "{{ vault_backbone__authelia__oidc_nextcloud_clientid }}"
backbone__authelia__oidc_nextcloud_clientsecret: "{{ vault_backbone__authelia__oidc_nextcloud_clientsecret }}"
backbone__authelia__oidc_nextcloud_clientsecret_hash: "{{ vault_backbone__authelia__oidc_nextcloud_clientsecret_hash }}"
backbone__authelia__oidc_recipes_clientid: "{{ vault_backbone__authelia__oidc_recipes_clientid }}"
backbone__authelia__oidc_recipes_clientsecret: "{{ vault_backbone__authelia__oidc_recipes_clientsecret }}"
backbone__authelia__oidc_recipes_clientsecret_hash: "{{ vault_backbone__authelia__oidc_recipes_clientsecret_hash }}"

db__pg_password: "{{ vault_db__pg_password }}"
db__pg_databases:
  - name: "{{ backbone__lldap__db_user }}"
    password: "{{ backbone__lldap__db_pass }}"
  - name: "{{ backbone__authelia__db_user }}"
    password: "{{ backbone__authelia__db_pass }}"
  - name: nextcloud
    password: "{{ vault_nextcloud__postgres_password }}"
  - name: recipes
    password: "{{ vault_recipes__db_password }}"
  - name: paperless
    password: "{{ vault_paperless__postgres_password }}"
  - name: plausible
    password: "{{ vault_monitoring__plausible__postgress_pass }}"
  - name: wger
    password: "{{ vault_wger__db_password }}"
db__pg_dump_healthcheck_id: "{{ vault_db__pg_dump_healthcheck_id }}"
db__pgadmin_email: "{{ vault_db__pgadmin_email }}"
db__pgadmin_password: "{{ vault_db__pgadmin_password }}"

ddns__user: "{{ vault_ddns__user }}"
ddns__pass: "{{ vault_ddns__pass }}"

nextcloud__postgres_password: "{{ vault_nextcloud__postgres_password }}"
nextcloud__postgres_backups_healthcheck_id: "{{ vault_nextcloud__postgres_backups_healthcheck_id }}"
nextcloud__ldap_user: "{{ vault_nextcloud__ldap_user }}"
nextcloud__ldap_pass: "{{ vault_nextcloud__ldap_pass }}"
nextcloud__nextcloud_admin: "{{ vault_nextcloud__nextcloud_admin }}"
nextcloud__nextcloud_password: "{{ vault_nextcloud__nextcloud_password }}"
nextcloud__healthcheck_id: "{{ vault_nextcloud__healthcheck_id }}"
nextcloud__monitor_token: "{{ vault_nextcloud__monitor_token }}"
nextcloud__passwordsalt: "{{ vault_nextcloud__passwordsalt }}"
nextcloud__secret: "{{ vault_nextcloud__secret }}"
nextcloud__instanceid: "{{ vault_nextcloud__instanceid }}"

torrent__user: "{{ vault_torrent__user }}"
torrent__pass: "{{ vault_torrent__pass }}"

usenet__server_name: "{{ vault_usenet__server_name }}"
usenet__server_host: "{{ vault_usenet__server_host }}"
usenet__server_port: "{{ vault_usenet__server_port }}"
usenet__server_user: "{{ vault_usenet__server_user }}"
usenet__server_pass: "{{ vault_usenet__server_pass }}"
usenet__user: "{{ vault_usenet__user }}"
usenet__pass: "{{ vault_usenet__pass }}"
usenet__api_key: "{{ vault_usenet__api_key }}"
usenet__nzb_key: "{{ vault_usenet__nzb_key }}"

ytdl_sub__healthcheck_id: "{{ vault_ytdl_sub__healthcheck_id }}"

photoprism__photoprism_password: "{{ vault_photoprism__photoprism_password }}"
photoprism__mariadb_password: "{{ vault_photoprism__mariadb_password }}"
photoprism___backup_healthcheck_id: "{{ vault_photoprism___backup_healthcheck_id }}"
photoprism__indexing_healthcheck_id: "{{ vault_photoprism__indexing_healthcheck_id }}"

recipes__secret_key: "{{ vault_recipes__secret_key }}"
recipes__db_password: "{{ vault_recipes__db_password }}"
recipes__postgres_backups_healthcheck_id: "{{ vault_recipes__postgres_backups_healthcheck_id }}"

backups__local_domain: "{{ vault_backups__local_domain }}"
backups__local_destination: "rest:http://{{backups__local_domain}}:8000/"
backups__local_healthcheck_id: "{{ vault_backups__local_healthcheck_id }}"
backups__remote_destination: "{{ vault_backups__remote_destination }}"
backups__access_id_remote: "{{ vault_backups__access_id_remote }}"
backups__access_secret_remote: "{{ vault_backups__access_secret_remote }}"
backups__remote_healthcheck_id: "{{ vault_backups__remote_healthcheck_id }}"
backups__encryption_key: "{{ vault_backups__encryption_key }}"
backups__volumes_common:
  # For correct time
  - /etc/timezone:/etc/timezone:ro
  - /etc/localtime:/etc/localtime:ro
  # Folders to backup
  - /mnt/storage/nextcloud:/data/nextcloud
  - /mnt/storage/pictures:/data/pictures
  - /mnt/storage/recipes:/data/recipes
  - /mnt/storage/backups:/data/backups
  - "{{ docker_mounts_directory }}/jellyfin:/data/jellyfin"
  - "{{ docker_mounts_directory }}/audiobookshelf:/data/audiobookshelf"
  - "{{ docker_mounts_directory }}/sonarr/config:/data/sonarr/config"
  - "{{ docker_mounts_directory }}/radarr/config:/data/radarr/config"
  - "{{ docker_mounts_directory }}/lidarr/config:/data/lidarr/config"
  - "{{ docker_mounts_directory }}/readarr/config:/data/readarr/config"
  - "{{ docker_mounts_directory }}/prowlarr/config:/data/prowlarr/config"
  - "{{ docker_mounts_directory }}/bazarr/config:/data/bazarr/config"
  - /mnt/storage/minecraft/data:/data/minecraft
  - /mnt/storage/mc-usw/data
  - "{{ docker_mounts_directory }}/foundryvtt:/data/foundryvtt"
  - "{{ docker_mounts_directory }}/uptime"
  - "{{ docker_mounts_directory }}/grafana:/data/grafana"
  - "{{ docker_mounts_directory }}/paperless/data:/data/paperless/data"
  - /mnt/storage/paperless/media:/data/paperless/media
  - /mnt/storage/syncthing/config:/data/syncthing/config
  - "{{ docker_mounts_directory }}/wallos:/data/wallos"
  - "{{ docker_mounts_directory }}/s-pdf:/data/s-pdf"
backups__volumes_local_only:
  - ./hooks/local:/hooks
  - "{{ docker_compose_directory }}/restic/.ssh:/home/backup/.ssh"
  - /mnt/storage/streaming/media:/data/streaming/media
backups__volumes_remote_only:
  - ./hooks/remote:/hooks
  - /mnt/storage/streaming/media/music:/data/streaming/media/music

minecraft__forbid_cracked: true
minecraft__view_distance: 12
minecraft__max_player: 5
minecraft__difficulty: easy
minecraft__gamemode: survival
minecraft__whitelisted_players: "{{ vault_minecraft__whitelisted_players }}"
minecraft__admin_players: "{{ vault_minecraft__admin_players }}"
minecraft__dynmap__resolution: "hires" # default: hires.

dashboard__shortcuts: "{{ vault_dashboard__shortcuts }}"
dashboard__open_weather_key: "{{ vault_dashboard__open_weather_key }}"

foundryvtt__username: "{{ vault_foundryvtt__username }}"
foundryvtt__password: "{{ vault_foundryvtt__password }}"
foundryvtt__admin_key: "{{ vault_foundryvtt__admin_key }}"

monitoring__uptime_user: "{{ vault_monitoring__uptime_user }}"
monitoring__uptime_pass: "{{ vault_monitoring__uptime_pass }}"
monitoring__plausible_secret: "{{ vault_monitoring__plausible_secret }}"
monitoring__plausible__postgress_pass: "{{ vault_monitoring__plausible__postgress_pass }}"
monitoring__adguard_exporter_username: "{{ vault_monitoring__adguard_exporter_username }}"
monitoring__adguard_exporter_password: "{{ vault_monitoring__adguard_exporter_password }}"

paperless__postgres_password: "{{ vault_paperless__postgres_password }}"
paperless__postgres_backups_healthcheck_id: "{{ vault_paperless__postgres_backups_healthcheck_id }}"
paperless__secret_key: "{{ vault_paperless__secret_key }}"

wger__db_password: "{{ vault_wger__db_password }}"
wger__secret_key: "{{ vault_wger__secret_key }}"
wger__signing_key: "{{ vault_wger__signing_key }}"
wger__celery_password: "{{ vault_wger__celery_password }}"

# Obsidian vaults that should be published through quartz
quartz__vaults:
  - name: dnd-saltmarsh
    path: /mnt/storage/syncthing/config/Notes/TTRPG/DnD - Saltmarsh
  - name: dnd-yp
    path: /mnt/storage/syncthing/config/Notes/TTRPG/DnD - Yawning Portal
  - name: dnd-bahut
    path: /mnt/storage/syncthing/config/Notes/TTRPG/DnD - Bahut

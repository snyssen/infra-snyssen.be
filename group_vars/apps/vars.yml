snapraid_runner_path: /opt/snapraid-runner/snapraid-runner
snapraid_runner_conf: "{{ snapraid_runner_path }}.conf"
snapraid_runner_bin: "{{ snapraid_runner_path }}.py"
snapraid_healthcheck_io_host: https://hc-ping.com
snapraid_runner_healthcheck_io_uuid: "{{ vault_snapraid_runner_healthcheck_io_uuid }}"

# Used to store docker files that often changes__
# As such THIS DIRECTORY SHOULD NOT BE ON A DRIVE MANAGED BY SNAPRAID
# Please either use the main drive or an unmanaged drive (An SSD would be best)
# Most of the files stored there will be databases__ As such they could significantly grow in size
docker_mounts_directory: "{{ vault_docker_mounts_directory }}"

backbone__traefik_dashboard_htpassword: "{{ vault_backbone__traefik_dashboard_htpassword }}"
backbone__acme_ca_server: "{{ vault_backbone__acme_ca_server }}"
backbone__acme_dns_challenge__enabled: "{{ vault_backbone__acme_dns_challenge__enabled }}"
backbone__acme_dns_challenge__provider: "{{ vault_backbone__acme_dns_challenge__provider }}"
backbone__acme_dns_challenge__api_key: "{{ vault_backbone__acme_dns_challenge__api_key }}"
backbone__acme_dns_challenge__api_key_variable: "{{ vault_backbone__acme_dns_challenge__api_key_variable }}"
backbone__acme_http_challenge__enabled: "{{ vault_backbone__acme_http_challenge__enabled }}"

ddns__user: "{{ vault_ddns__user }}"
ddns__pass: "{{ vault_ddns__pass }}"

nextcloud__postgres_password: "{{ vault_nextcloud__postgres_password }}"
nextcloud__postgres_backups_healthcheck_id: "{{ vault_nextcloud__postgres_backups_healthcheck_id }}"
nextcloud__nextcloud_admin: "{{ vault_nextcloud__nextcloud_admin }}"
nextcloud__nextcloud_password: "{{ vault_nextcloud__nextcloud_password }}"
nextcloud__healthcheck_id: "{{ vault_nextcloud__healthcheck_id }}"
nextcloud__monitor_token: "{{ vault_nextcloud__monitor_token }}"

torrent__user: "{{ vault_torrent__user }}"
torrent__pass_pbkdf2: "{{ vault_torrent__pass_pbkdf2 }}"

usenet__server_name: "{{ vault_usenet__server_name }}"
usenet__server_host: "{{ vault_usenet__server_host }}"
usenet__server_port: "{{ vault_usenet__server_port }}"
usenet__server_user: "{{ vault_usenet__server_user }}"
usenet__server_pass: "{{ vault_usenet__server_pass }}"
usenet__user: "{{ vault_usenet__user }}"
usenet__pass: "{{ vault_usenet__pass }}"

piped__postgres_password: "{{ vault_piped__postgres_password }}"
piped__postgres_backups_healthcheck_id: "{{ vault_piped__postgres_backups_healthcheck_id }}"

photoprism__photoprism_password: "{{ vault_photoprism__photoprism_password }}"
photoprism__mariadb_password: "{{ vault_photoprism__mariadb_password }}"
photoprism___backup_healthcheck_id: "{{ vault_photoprism___backup_healthcheck_id }}"
photoprism__indexing_healthcheck_id: "{{ vault_photoprism__indexing_healthcheck_id }}"

recipes__secret_key: "{{ vault_recipes__secret_key }}"
recipes__db_password: "{{ vault_recipes__db_password }}"
recipes__postgres_backups_healthcheck_id: "{{ vault_recipes__postgres_backups_healthcheck_id }}"

backups__local_domain: "{{ vault_backups__local_domain }}"
backups__local_destination: "rest:http://{{backups__local_domain}}:8000/"
backups__local_healthcheck_id: "{{ vault_backups__local_healthcheck_id }}"
backups__remote_destination: "{{ vault_backups__remote_destination }}"
backups__access_id_remote: "{{ vault_backups__access_id_remote }}"
backups__access_secret_remote: "{{ vault_backups__access_secret_remote }}"
backups__remote_healthcheck_id: "{{ vault_backups__remote_healthcheck_id }}"
backups__encryption_key: "{{ vault_backups__encryption_key }}"
backups__volumes_common:
  # For correct time
  - /etc/timezone:/etc/timezone:ro
  - /etc/localtime:/etc/localtime:ro
  # Folders to backup
  - /mnt/storage/nextcloud:/data/nextcloud
  - /mnt/storage/pictures:/data/pictures
  - /mnt/storage/recipes:/data/recipes
  - /mnt/storage/backups:/data/backups
  - "{{ docker_mounts_directory }}/jellyfin:/data/jellyfin"
  - "{{ docker_mounts_directory }}/sonarr/config:/data/sonarr/config"
  - "{{ docker_mounts_directory }}/radarr/config:/data/radarr/config"
  - "{{ docker_mounts_directory }}/lidarr/config:/data/lidarr/config"
  - "{{ docker_mounts_directory }}/prowlarr/config:/data/prowlarr/config"
  - /mnt/storage/gitea:/data/gitea
  - /mnt/storage/minecraft/data:/data/minecraft
  - /mnt/storage/foundryvtt:/data/foundryvtt
  - "{{ docker_mounts_directory }}/grafana:/data/grafana"
  - "{{ docker_mounts_directory }}/paperless/data"
  - /mnt/storage/paperless/media
backups__volumes_local_only:
  - ./hooks/local:/hooks
  - "{{ docker_compose_directory }}/restic/.ssh:/home/backup/.ssh"
  - /mnt/storage/streaming/media:/data/streaming/media
backups__volumes_remote_only:
  - ./hooks/remote:/hooks
  - /mnt/storage/streaming/media/music:/data/streaming/media/music

git__postgres_password: "{{ vault_git__postgres_password }}"
git__postgres_backups_healthcheck_id: "{{ vault_git__postgres_backups_healthcheck_id }}"
git__gitea__secret_key: "{{ vault_git__gitea__secret_key }}"
git__gitea__internal_secret: "{{ vault_git__gitea__internal_secret }}"
git__gitea__admin_username: "{{ vault_git__gitea__admin_username }}"
git__gitea__admin_email: "{{ vault_git__gitea__admin_email }}"
git__gitea__admin_password: "{{ vault_git__gitea__admin_password }}"

cicd__postgres__password: "{{ vault_cicd__postgres__password }}"
cicd__postgres__backups_healthcheck_id: "{{ vault_cicd__postgres__backups_healthcheck_id }}"
cicd__drone__gitea_client_id: "{{ vault_cicd__drone__gitea_client_id }}"
cicd__drone__gitea_client_secret: "{{ vault_cicd__drone__gitea_client_secret }}"
cicd__rpc_secret: "{{ vault_cicd__rpc_secret }}"
cicd__runner__username: "{{ vault_cicd__runner__username }}"
cicd__runner__password: "{{ vault_cicd__runner__password }}"

minecraft__forbid_cracked: true
minecraft__view_distance: 12
minecraft__max_player: 5
minecraft__difficulty: easy
minecraft__gamemode: survival
minecraft__admin_players: "{{ vault_minecraft__admin_players }}"
minecraft__dynmap__resolution: "hires" # default: hires.

dashboard__shortcuts: "{{ vault_dashboard__shortcuts }}"
dashboard__open_weather_key: "{{ vault_dashboard__open_weather_key }}"

foundryvtt__username: "{{ vault_foundryvtt__username }}"
foundryvtt__password: "{{ vault_foundryvtt__password }}"
foundryvtt__admin_key: "{{ vault_foundryvtt__admin_key }}"

monitoring__uptime_user: "{{ vault_monitoring__uptime_user }}"
monitoring__uptime_pass: "{{ vault_monitoring__uptime_pass }}"
monitoring__plausible_secret: "{{ vault_monitoring__plausible_secret }}"
monitoring__plausible__postgress_pass: "{{ vault_monitoring__plausible__postgress_pass }}"

paperless__postgres_password: "{{ vault_paperless__postgres_password }}"
paperless__postgres_backups_healthcheck_id: "{{ vault_paperless__postgres_backups_healthcheck_id }}"
paperless__secret_key: "{{ vault_paperless__secret_key }}"

firefly__postgres_password: "{{ vault_firefly__postgres_password }}"
firefly__postgres_backups_healthcheck_id: "{{ vault_firefly__postgres_backups_healthcheck_id }}"
firefly__app_key: "{{ vault_firefly__app_key }}"
firefly__access_token: "{{ vault_firefly__access_token }}"
firefly__nordigen_id: "{{ vault_firefly__nordigen_id }}"
firefly__nordigen_key: "{{ vault_firefly__nordigen_key }}"

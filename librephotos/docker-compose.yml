version: '3'
services:

  librephotos_proxy:
    container_name: librephotos_proxy
    image: reallibrephotos/librephotos-proxy:dev
    restart: always
    networks:
      - web
      - internal
    volumes:
      - ${myPhotos}:/data
      - ${proMedia}:/protected_media
      - ./nginx.conf:/etc/nginx/nginx.conf
    labels:
      - traefik.enable=true
      - traefik.http.routers.librephotos.entryPoints=websecure
      - traefik.http.routers.librephotos.rule=Host(`pics.snyssen.be`)
      - traefik.http.routers.librephotos.tls=true
      - traefik.http.routers.librephotos.tls.certresolver=le
      - traefik.docker.network=web
    depends_on:
      - librephotos_backend
      - librephotos_frontend

  librephotos_db:
    container_name: librephotos_db
    image: postgres:13
    restart: always
    networks:
      - internal
    environment:
      - POSTGRES_USER=${dbUser}
      - POSTGRES_PASSWORD=${dbPass}
      - POSTGRES_DB=${dbName}
    volumes:
      - ${dbLocation}:/var/lib/postgresql/data
    command: postgres -c fsync=off -c synchronous_commit=off -c full_page_writes=off -c random_page_cost=1.0

  librephotos_frontend:
    container_name: librephotos_frontend
    image: reallibrephotos/librephotos-frontend:dev
    restart: always
    networks:
      - internal
    depends_on:
      - librephotos_backend

  librephotos_backend:
    container_name: librephotos_backend
    image: reallibrephotos/librephotos:dev
    restart: always
    networks:
      - internal
    volumes:
      - ${myPhotos}:/data
      - ${proMedia}:/protected_media
      - librephotos_logs:/logs
      - librephotos_cache:/root/.cache
    environment:
      - SECRET_KEY=${secretKey}
      - BACKEND_HOST=librephotos_backend
      - ADMIN_EMAIL=${adminEmail}
      - ADMIN_USERNAME=${userName}
      - ADMIN_PASSWORD=${userPass}
      - DB_BACKEND=postgresql
      - DB_NAME=${dbName}
      - DB_USER=${dbUser}
      - DB_PASS=${dbPass}
      - DB_HOST=librephotos_db
      - DB_PORT=5432
      - REDIS_HOST=librephotos_redis
      - REDIS_PORT=6379
      - MAPBOX_API_KEY=${mapApiKey}
      - TIME_ZONE=${timeZone}
      - WEB_CONCURRENCY=${gunniWorkers}
      - SKIP_PATTERNS=${skipPatterns}
      - DEBUG=0
      - HEAVYWEIGHT_PROCESS=${HEAVYWEIGHT_PROCESS}
    # Wait for Postgres
    depends_on:
      - librephotos_db

  librephotos_redis:
    container_name: librephotos_redis
    networks:
      - internal
    image: redis:6
    restart: always

networks:
  web:
    external: true
  internal:
  
volumes:
  librephotos_cache:
  librephotos_logs:
